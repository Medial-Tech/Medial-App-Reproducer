[versions]
versionName = "1.3.1"
versionCode = "32"

agp = "8.2.0"
kotlin = "1.9.21"
ktor = "2.3.7"
compose = "1.5.11"
compose-compiler="1.5.4"
moko-resources = "0.23.0"
moko-geo-compose = "0.6.0"
multiplatform-settings = "1.1.1"
koin = "3.5.3"
stately = "2.0.4"
sql-delight = "2.0.1"
buildKonfig = "0.15.1"
coil="3.0.0-alpha03"
decompose="3.0.0-beta01"
ksoup = "0.1.2"

[libraries]

#utils
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version = "1.8.0" }
kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.5.0" }
napier = { module = "io.github.aakira:napier", version = "2.6.1" }
touchlabs-crashlytics = { module = "co.touchlab.crashkios:crashlytics", version = "0.8.5" }
ksoup = { module = "com.fleeksoft.ksoup:ksoup", version.ref="ksoup" }
ksoup-network = { module = "com.fleeksoft.ksoup:ksoup-network", version.ref = "ksoup" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.6.2"}
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
rebugger = { module = "io.github.theapache64:rebugger", version = "1.0.0-rc02"}
kotlinx-immutable-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.7"}

#paging
androidx-paging = { module = "androidx.paging:paging-common", version = "3.3.0-alpha02"}
paging-compose-common = { module = "app.cash.paging:paging-compose-common", version = "3.3.0-alpha02-0.4.0" }

#ui
kevinnzou-webview = { group = "io.github.kevinnzou", name = "compose-webview-multiplatform", version = "1.9.2" }
compottie = { module = "io.github.alexzhirkevich:compottie", version = "1.0.0"}
compose-dnd = { module = "com.mohamedrejeb.dnd:compose-dnd", version = "0.1.0"}
peekaboo-image-picker = { module = "io.github.onseok:peekaboo-image-picker", version = "0.4.3" }


#image-loading
coil = { module = "io.coil-kt.coil3:coil", version.ref = "coil"}
coil-network = { module = "io.coil-kt.coil3:coil-network-ktor", version.ref = "coil"}
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil"}
coil-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil"}

#moko
moko-geo-compose = { module = "dev.icerock.moko:geo-compose", version.ref = "moko-geo-compose" }
moko-permissions = { module = "dev.icerock.moko:permissions-compose", version = "0.17.0" }
moko-resources-generator = { module = "dev.icerock.moko:resources-generator", version.ref = "moko-resources" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-resources" }

#decompose
decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose"}
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose"}

#workaround for iOS issue
stately-isolate = { module = "co.touchlab:stately-isolate", version.ref = "stately" }
stately-iso-collections = { module = "co.touchlab:stately-iso-collections", version.ref = "stately" }

#DI
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

#ktor
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

#sqldelight
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sql-delight" }
sqlDelight-coroutines-ext = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sql-delight" }
sqlDelight-paging3-ext = { module = "app.cash.sqldelight:androidx-paging3-extensions", version.ref = "sql-delight" }
sqlDelight-primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sql-delight" }
sqlDelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sql-delight" }
sqlDelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sql-delight" }

#multiplatform settings
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatform-settings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform-settings" }

android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
compose-gradlePlugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose" }

[bundles]

ktor-common = ["ktor-client-logging", "ktor-client-core", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json"]
sqlDelight-common = ["sqlDelight-runtime", "sqlDelight-coroutines-ext", "sqlDelight-paging3-ext", "sqlDelight-primitive-adapters"]
multiplatform-settings = ["multiplatform-settings", "multiplatform-settings-coroutines"]
coil = ["coil", "coil-network", "coil-compose", "coil-svg"]
decompose = ["decompose-core", "decompose-compose"]

[plugins]

crashlytics = { id = "com.google.firebase.crashlytics", version = "2.9.9" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin"}
kotlin-serialization = {id = "org.jetbrains.kotlin.plugin.serialization", version= "1.9.20"}
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose" }
buildKonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildKonfig" }
sql-delight = { id = "app.cash.sqldelight", version.ref = "sql-delight"}

